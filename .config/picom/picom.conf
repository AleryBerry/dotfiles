#################################
#             Shadows           #
#################################
shadow = true;
shadow-radius = 4;
shadow-offset-x = -2;
shadow-offset-y = 0;


#################################
#           Fading              #
#################################
fading = true
fade-in-step = 0.02;
# fix
fade-out-step = 1;
fade-delta = 5;

#################################
#           Opacity              #
#################################
inactive-dim-fixed =true;
#inactive-opacity-override = true;


#################################
#           Blur                #
#################################
blur-kern = "5x5box";
blur: {
  method = "dual_kawase";
  strength = 3;
  background = true;
  background-frame = false;
  background-fixed = false;
}


backend = "glx";
vsync = true
detect-rounded-corners = true;
detect-client-opacity = true;
detect-transient = true;
detect-client-leader = true;
use-damage = true;
log-level = "info";

animations = ( 
{
  triggers = ["close"];
  opacity = {
      curve = "cubic-bezier(0,1,1,1)";
      duration = 0.3;
      start = "window-raw-opacity-before";
      end = 0;
  };
  blur-opacity = "opacity";
  shadow-opacity = "opacity";

  scale-x = {
      curve = "cubic-bezier(0,1.3,1,1)";
      duration = 0.3;
      start = 1;
      end = 0.6;
  };
  scale-y = "scale-x";

  offset-x = "(1 - scale-x) / 2 * window-width";
  offset-y = "(1 - scale-y) / 2 * window-height";

  shadow-scale-x = "scale-x";
  shadow-scale-y = "scale-y";
  shadow-offset-x = "offset-x";
  shadow-offset-y = "offset-y";
},
{
  triggers = ["open"];
  opacity = {
      curve = "cubic-bezier(0,1,1,1)";
      duration = 0.5;
      start = 0;
      end = "window-raw-opacity";
  };
  blur-opacity = "opacity";
  shadow-opacity = "opacity";

  scale-x = {
      curve = "cubic-bezier(0,1.3,1,1)";
      duration = 0.5;
      start = 0.6;
      end = 1;
  };
  scale-y = "scale-x";

  offset-x = "(1 - scale-x) / 2 * window-width";
  offset-y = "(1 - scale-y) / 2 * window-height";

  shadow-scale-x = "scale-x";
  shadow-scale-y = "scale-y";
  shadow-offset-x = "offset-x";
  shadow-offset-y = "offset-y";
  },
{
  triggers = ["geometry"];
  # Cuando la ventana CRECE (abrir/mover/redimensionar)
  scale-x = {
      curve = "cubic-bezier(0,0,0,1.28)";
      duration = 2;
      start = "window-width-before / window-width";
      end = 1;
  };

  # Cuando la ventana ENCOGE (cerrar/mover/redimensionar)
  scale-x-reverse = {
      curve = "cubic-bezier(0,0,0,1.28)";
      duration = 1;
      start = "window-width / window-width-before";
      end = 1;
  };
  scale-y = {
      curve = "cubic-bezier(0,0,0,1.28)";
      duration = 0.5;
      start = "window-height-before / window-height";
      end = 1;
  };
  scale-y-reverse = {
      curve = "cubic-bezier(0,0,0,1.28)";
      duration = 1;
      start = "window-height / window-height-before";
      end = 1;
  };
  offset-x = {
      curve = "cubic-bezier(0,0,0,1.28)";
      duration = 1;
      start = "window-x-before - window-x";
      end = 0;
  };
  offset-y = {
      curve = "cubic-bezier(0,0,0,1.28)";
      duration = 1;
      start = "window-y-before - window-y";
      end = 0;
  };
  shadow-scale-x = "scale-x";
  shadow-scale-y = "scale-y";
  shadow-offset-x = "offset-x";
  shadow-offset-y = "offset-y";
})

rules: (

  {
    match = "tooltip";
    fade = true; 
    shadow = true; 
    focus = true; 
    full-shadow = false;
  },
  {
    match = "dock";
    full-shadow = false;
  },
  {
    match = "toolbar || dialog";
    shadow = false; full-shadow = false; focus = true; 
  },
  {
    match = "dnd";
    shadow = false; focus = true; 
  },
  {
    match = "poup_menu || dropdown_menu";
    opacity = 0.8; focus = true;
  },
  {
  match = "class_g = 'code-editor' || name = 'walker'"
    blur-background = false;
    shadow = false;
  },
	{
		match = "name = 'walker'";
		animations = (
		{
			triggers = ["close", "hide"];
			preset = "disappear";
			duration = 0.2;
			scale = 0.5;
		},
		{
			triggers = ["open", "show"];
      suppressions = ["geometry"];
			preset = "appear";
			duration = 0.2;
			scale = 0.5;
		},
    {
      triggers = ["geometry"];
      duration = 0;
    }
		)
	},
	{
		match = "name = 'rmpc' || class_g = 'code-editor'";
		animations = (
		{
			triggers = ["close", "hide"];
			preset = "disappear";	#-dunst-close-preset
			duration = 0.2;
		},
		{
			triggers = ["open", "show"];
			preset = "appear";	#-dunst-open-preset
			duration = 0.2;
		})
  }
)

